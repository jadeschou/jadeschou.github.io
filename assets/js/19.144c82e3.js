(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{297:function(s,a,t){"use strict";t.r(a);var e=t(13),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中"}},[s._v("#")]),s._v(" 水平垂直居中")]),s._v(" "),a("p",[s._v("父元素设置 display:flex，子元素设置 margin:auto。可以实现水平垂直居中")]),s._v(" "),a("h2",{attrs:{id:"padding-和-margin-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#padding-和-margin-区别"}},[s._v("#")]),s._v(" padding 和 margin 区别")]),s._v(" "),a("p",[s._v("作用对象不同\npadding 作用于自身，margin 做用于外部对象")]),s._v(" "),a("h2",{attrs:{id:"vw-和百分比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vw-和百分比"}},[s._v("#")]),s._v(" vw 和百分比")]),s._v(" "),a("p",[s._v("vw 与 vh 是一种视窗单位，也是相对单位。它相对的不是父节点或者页面的根节点。而是由视窗（Viewport）大小来决定的\n百分比有继承关系")]),s._v(" "),a("h2",{attrs:{id:"行内元素和块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内元素和块级元素"}},[s._v("#")]),s._v(" 行内元素和块级元素")]),s._v(" "),a("p",[a("strong",[s._v("行内元素")]),s._v("不能换行，不能设置宽高，由内容撑开\n"),a("strong",[s._v("块级元素")]),s._v("会独占一行；高度，行高，外边距和内边距都可以单独设置；宽度默认是容器的 100%;\n可以容纳内联元素和其他的块级元素")]),s._v(" "),a("h2",{attrs:{id:"如何让-google-浏览器支持小字体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何让-google-浏览器支持小字体"}},[s._v("#")]),s._v(" 如何让 Google 浏览器支持小字体")]),s._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("text")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"什么是预编译语音-预编译处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是预编译语音-预编译处理器"}},[s._v("#")]),s._v(" 什么是预编译语音|预编译处理器?")]),s._v(" "),a("p",[a("strong",[s._v("Sass")]),s._v(" 是一种 CSS 预处理器语言，通过编程方式生成 CSS 代码。因为可编程，所以操控灵活性自由度高，方便实现一些直接编写 CSS 代码较困难的代码。")]),s._v(" "),a("p",[s._v("同时，因为 Sass 是生成 CSS 的语言，所以写出来的 Sass 文件是不能直接用的，必须经过编译器编译成 CSS 文件才能使用。")]),s._v(" "),a("p",[s._v("CSS 预处理器是一种语言用来为 CSS 增加一些编程的的特性，无需考虑浏览器的兼容性问题，例如你可以在 CSS 中使用变量、简单的程序逻辑、函数等等在编程语言中的一些基本技巧，可以让你的 CSS 更见简洁，适应性更强，代码更直观等诸多好处。最常用的 css 预处理器有 sass、less css、 stylus。")]),s._v(" "),a("h2",{attrs:{id:"sass-和-less-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sass-和-less-有什么区别"}},[s._v("#")]),s._v(" sass 和 less 有什么区别?")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("编译环境不一样 Sass 的安装需要 Ruby 环境，是在服务端处理的，而 Less 是需要引入 less.js 来处理 Less 代码输出 css 到浏览器，也可以在开发环节使用 Less，然后编译成 css 文件，直接放到项目中。")])]),s._v(" "),a("li",[a("p",[s._v("变量符不一相，less 是@，而 scss 是$,而且它们的作用域也不一样，less 是块级作用域")])]),s._v(" "),a("li",[a("p",[s._v("输出设置，Less 没有输出设置，sass 提供 4 种输出选项，nested,compact,compressed 和 expanded nested：嵌套缩进的 css 代码(默认) expanded：展开的多行 css 代码 compact：简洁格式的 css 代码 compressed：压缩后的 css 代码")])]),s._v(" "),a("li",[a("p",[s._v("sass 支持条件语句，可以使用 if{}else{},for{}循环等等，而 less 不行")])]),s._v(" "),a("li",[a("p",[s._v("引用外部 css 文件，sass 引用外部文件必须以"),a("em",[s._v("开头，文件名如果以下划线")]),s._v("形状，sass 会认为该文件是一个引用文件，不会将其编译为 css 文件。less 引用外部文件和 css 中的@import 没什么差异。")])]),s._v(" "),a("li",[a("p",[s._v("sass 和 less 的工具库不同。sass 有工具库 Compass, 简单说，sass 和 Compass 的关系有点像 Javascript 和 jQuery 的关系,Compass 是 sass 的工具库。在它的基础上，封装了一系列有用的模块和模板，补充强化了 sass 的功能。less 有 UI 组件库 Bootstrap,Bootstrap 是 web 前端开发中一个比较有名的前端 UI 组件库，Bootstrap 的样式文件部分源码就是采用 less 语法编写。")])])]),s._v(" "),a("p",[a("strong",[s._v("总结")]),s._v("：不管是 "),a("strong",[s._v("sass")]),s._v("，还是 "),a("strong",[s._v("less")]),s._v("，都可以视为一种基于 CSS 之上的高级语言，其目的是使得 CSS 开发更灵活和更强大，sass 的功能比 less 强大,基本可以说是一种真正的编程语言了，less 则相对清晰明了,易于上手,对编译环境要求比较宽松。考虑到编译 sass 要安装 Ruby,而 Ruby 官网在国内访问不了,个人在实际开发中更倾向于选择 less。")])])}),[],!1,null,null,null);a.default=r.exports}}]);