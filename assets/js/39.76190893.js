(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{319:function(a,t,s){"use strict";s.r(t);var r=s(13),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"个人简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#个人简介"}},[a._v("#")]),a._v(" 个人简介")]),a._v(" "),t("p",[a._v("我是 17 年毕业的，毕业之后一直专注于前端的工作，主要做的是二三维可视化的一些项目，最开始是用的原生 js 写的，从 19 年开始做前后端分离项目，接触 vue 框架进行基于 vue 的前端开发，vue2 和 vue3 都用过\n我来之前呢大致了解了一下咱们公司的业务和产品，我很感兴趣，也很想往这方面发展，")]),a._v(" "),t("h2",{attrs:{id:"展望-5-年内规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#展望-5-年内规划"}},[a._v("#")]),a._v(" 展望 5 年内规划")]),a._v(" "),t("p",[a._v("深耕在什么领域\n提高自己的前端能力，有机会的话希望能学习一下后端")]),a._v(" "),t("h2",{attrs:{id:"为什么选择程序员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么选择程序员"}},[a._v("#")]),a._v(" 为什么选择程序员")]),a._v(" "),t("p",[a._v("技术解决问题是一个非常有成就感的事，没有人能想象自己的小发现会改变历史，正如千年前的人不可能想象到现代社会的样子。但正是那些小小的发明和偶然的积累才开创了当今时代。因此，人们必须要有发现问题并努力解决问题的能力。")]),a._v(" "),t("h2",{attrs:{id:"封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[a._v("#")]),a._v(" 封装")]),a._v(" "),t("p",[a._v("axios 封装，在后台管理项目中配置通用的基地址请求超时，携带 token 数据,进度条，统一处理请求错误 请求拦截")]),a._v(" "),t("h2",{attrs:{id:"防抖-节流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防抖-节流"}},[a._v("#")]),a._v(" 防抖 节流")]),a._v(" "),t("h2",{attrs:{id:"项目优化-这个优化说的太少了-路由懒加载-就说了这个-图片的优化没说-跳转页面优化也没说"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目优化-这个优化说的太少了-路由懒加载-就说了这个-图片的优化没说-跳转页面优化也没说"}},[a._v("#")]),a._v(" 项目优化 这个优化说的太少了 路由懒加载 就说了这个 图片的优化没说 跳转页面优化也没说")]),a._v(" "),t("h2",{attrs:{id:"hash-history"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hash-history"}},[a._v("#")]),a._v(" hash history")]),a._v(" "),t("h2",{attrs:{id:"项目简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目简介"}},[a._v("#")]),a._v(" 项目简介")]),a._v(" "),t("p",[a._v("项目的主要业务，项目的亮点，遇到的问题，如何解决的，从中获得了哪些经验 ##迭代\n如何管理迭代，线上日志是怎么查看的，发布流程什么样，开发过程中输出了哪些文档\nui 组件 element and vue,有一些不满足的改写 css 样式")]),a._v(" "),t("h2",{attrs:{id:"水平垂直居中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中"}},[a._v("#")]),a._v(" 水平垂直居中")]),a._v(" "),t("h2",{attrs:{id:"bfc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[a._v("#")]),a._v(" bfc")]),a._v(" "),t("p",[a._v("触发 bfc")]),a._v(" "),t("h2",{attrs:{id:"babel-编译原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#babel-编译原理"}},[a._v("#")]),a._v(" babel 编译原理")]),a._v(" "),t("h2",{attrs:{id:"异步-eventloop-事件循环机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步-eventloop-事件循环机制"}},[a._v("#")]),a._v(" 异步 eventloop 事件循环机制")]),a._v(" "),t("h2",{attrs:{id:"闭包-作用域-作用域链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包-作用域-作用域链"}},[a._v("#")]),a._v(" 闭包 作用域 作用域链")]),a._v(" "),t("h2",{attrs:{id:"跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[a._v("#")]),a._v(" 跨域")]),a._v(" "),t("h2",{attrs:{id:"生命周期-各自做哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生命周期-各自做哪些"}},[a._v("#")]),a._v(" 生命周期 各自做哪些")]),a._v(" "),t("p",[a._v("接口 created 如果放 befirecreate data 还没有初始化完成，，无法把取到的数据赋给 model;mounted 页面结构已经完成了，如果数据和页面没有联系会有延迟")]),a._v(" "),t("h2",{attrs:{id:"_3-0-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-区别"}},[a._v("#")]),a._v(" 3.0 区别")]),a._v(" "),t("h2",{attrs:{id:"实现一个-settimeout-同步写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现一个-settimeout-同步写法"}},[a._v("#")]),a._v(" 实现一个 settimeout 同步写法")]),a._v(" "),t("h2",{attrs:{id:"vue-父子传值-子往父传值的场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-父子传值-子往父传值的场景"}},[a._v("#")]),a._v(" vue 父子传值 子往父传值的场景")]),a._v(" "),t("h2",{attrs:{id:"mvvm-defineproperty-v-model-原理-数据劫持和发布订阅模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-defineproperty-v-model-原理-数据劫持和发布订阅模式"}},[a._v("#")]),a._v(" mvvm defineproperty v-model 原理 数据劫持和发布订阅模式")]),a._v(" "),t("h2",{attrs:{id:"vuex-处理异步-actions-dispatch-commit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vuex-处理异步-actions-dispatch-commit"}},[a._v("#")]),a._v(" vuex 处理异步 actions dispatch commit")]),a._v(" "),t("h2",{attrs:{id:"屏幕响应式-媒体查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#屏幕响应式-媒体查询"}},[a._v("#")]),a._v(" 屏幕响应式 媒体查询")]),a._v(" "),t("h2",{attrs:{id:"字体响应式-rem-less-mixin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字体响应式-rem-less-mixin"}},[a._v("#")]),a._v(" 字体响应式 rem，less Mixin")]),a._v(" "),t("h2",{attrs:{id:"webpack-打包流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包流程"}},[a._v("#")]),a._v(" webpack 打包流程")]),a._v(" "),t("h2",{attrs:{id:"nexttick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[a._v("#")]),a._v(" nextTick")]),a._v(" "),t("h2",{attrs:{id:"v-if-v-show"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-show"}},[a._v("#")]),a._v(" V-IF V-SHOW")]),a._v(" "),t("h2",{attrs:{id:"v-model-是-value-input-的语法糖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-model-是-value-input-的语法糖"}},[a._v("#")]),a._v(" v-model 是 value+@input 的语法糖")]),a._v(" "),t("h2",{attrs:{id:"组件封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件封装"}},[a._v("#")]),a._v(" 组件封装")]),a._v(" "),t("h2",{attrs:{id:"diff"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[a._v("#")]),a._v(" diff")]),a._v(" "),t("p",[a._v("DELETE VUE.DELETE\nflex align-self\n{({ 回文 反转字符串\nVUE 优化\njs 数据类型")]),a._v(" "),t("h2",{attrs:{id:"深浅拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深浅拷贝"}},[a._v("#")]),a._v(" 深浅拷贝")]),a._v(" "),t("p",[a._v("深拷贝 json.stringify80%\n深拷贝浅拷贝，了解过计算机程序是怎么运行的就很好理解，本质上只是内存空间存储内容的区别\n1、基本类型变量栈空间的值就是变量本身的值\n2、引用类型变量栈空间的值是对应堆空间地址\n所以直接赋值的话，直接从栈空间访问，所以两个变量的值（堆空间地址）是一样的，本质就是同一片内存。\n浅拷贝相当于把地址对应的内存空间完全一致的复制了一份，所以里面的引用类型地址也是一样的。\n深拷贝则是把这一整个地址链上的内存完全的复制了一份")]),a._v(" "),t("h2",{attrs:{id:"es6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[a._v("#")]),a._v(" es6")]),a._v(" "),t("h2",{attrs:{id:"url-到页面显示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-到页面显示"}},[a._v("#")]),a._v(" url 到页面显示")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("1. 1. 第一步 浏览器通过DNS查找该域名的 IP 地址\n2.\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v("第二步 浏览器根据解析得到的 IP 地址向 web 服务器发送一个 HTTP 请求 3.")]),a._v(" "),t("li",[a._v("第三步 服务器收到请求并进行处理 4.")]),a._v(" "),t("li",[a._v("第四步 服务器返回一个响应 5.")]),a._v(" "),t("li",[a._v("第五步 浏览器对该响应进行解码，解析 html 为 dom、解析 css 为 css-tree、dom+ css 生成 render-tree 绘图 6.")]),a._v(" "),t("li",[a._v("第六步 页面显示完成后，浏览器发送异步请求。 7.")]),a._v(" "),t("li",[a._v("第七步 整个过程结束之后，浏览器关闭 TCP 连接。")])]),a._v(" "),t("h2",{attrs:{id:"重绘-回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重绘-回流"}},[a._v("#")]),a._v(" 重绘 回流")])])}),[],!1,null,null,null);t.default=e.exports}}]);